// Generated by CoffeeScript 1.7.1
var c, callback, progress;

c = new WebGLRobots.DefaultCanvas('#hubo_container');

window.hubo = new Hubo('hubo2', callback = function() {
  c.add(hubo);
  $('#load').hide();
  c.projector = new THREE.Projector();
  return $(c.renderer.domElement).on("mousedown", function(event) {
    var click, intersects, raycaster, vector;
    click = {};
    click.x = event.clientX - $(this).offset().left;
    click.y = event.clientY - $(this).offset().top;
    vector = new THREE.Vector3((click.x / c.display_width) * 2 - 1, -(click.y / c.display_height) * 2 + 1, 0.5);
    c.projector.unprojectVector(vector, c.camera);
    raycaster = new THREE.Raycaster(c.camera.position, vector.sub(c.camera.position).normalize());
    intersects = raycaster.intersectObjects(Array(hubo.links.Body_Torso), true);
    if (intersects.length > 0) {
      hubo.unhighlightAll();
      $('#part').html(intersects[0].object.parent.name);
      return intersects[0].object.parent.highlight();
    }
  });
}, progress = function(step, total, node) {
  return $('#load').html("Loading " + step + "/" + total);
});

$('#mouse_info_dialog').dialog({
  autoOpen: false,
  closeOnEscape: true,
  buttons: {
    OK: function() {
      return $(this).dialog('close');
    }
  }
});

$('#mouse_info_button').on('click', function() {
  return $('#mouse_info_dialog').dialog('open');
});

//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAiZmlsZSI6ICIvZXhhbXBsZXMvbW91c2VjbGljay9pbmRleC5qcyIsCiAgInNvdXJjZVJvb3QiOiAiIiwKICAic291cmNlcyI6IFsKICAgICIvZXhhbXBsZXMvbW91c2VjbGljay9pbmRleC5qcy5jb2ZmZWUiCiAgXSwKICAibmFtZXMiOiBbXSwKICAibWFwcGluZ3MiOiAiO0FBQ0EsSUFBQSxxQkFBQTs7QUFBQSxDQUFBLEdBQVEsSUFBQSxXQUFXLENBQUMsYUFBWixDQUEwQixpQkFBMUIsQ0FBUixDQUFBOztBQUFBLE1BRU0sQ0FBQyxJQUFQLEdBQWtCLElBQUEsSUFBQSxDQUFLLE9BQUwsRUFDZCxRQUFBLEdBQVcsU0FBQSxHQUFBO0FBR1gsRUFBQSxDQUFDLENBQUMsR0FBRixDQUFNLElBQU4sQ0FBQSxDQUFBO0FBQUEsRUFDQSxDQUFBLENBQUUsT0FBRixDQUFVLENBQUMsSUFBWCxDQUFBLENBREEsQ0FBQTtBQUFBLEVBR0EsQ0FBQyxDQUFDLFNBQUYsR0FBa0IsSUFBQSxLQUFLLENBQUMsU0FBTixDQUFBLENBSGxCLENBQUE7U0FJQSxDQUFBLENBQUUsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxVQUFiLENBQXdCLENBQUMsRUFBekIsQ0FBNEIsV0FBNUIsRUFBeUMsU0FBQyxLQUFELEdBQUE7QUFFdkMsUUFBQSxvQ0FBQTtBQUFBLElBQUEsS0FBQSxHQUFRLEVBQVIsQ0FBQTtBQUFBLElBQ0EsS0FBSyxDQUFDLENBQU4sR0FBVSxLQUFLLENBQUMsT0FBTixHQUFnQixDQUFBLENBQUUsSUFBRixDQUFPLENBQUMsTUFBUixDQUFBLENBQWdCLENBQUMsSUFEM0MsQ0FBQTtBQUFBLElBRUEsS0FBSyxDQUFDLENBQU4sR0FBVSxLQUFLLENBQUMsT0FBTixHQUFnQixDQUFBLENBQUUsSUFBRixDQUFPLENBQUMsTUFBUixDQUFBLENBQWdCLENBQUMsR0FGM0MsQ0FBQTtBQUFBLElBSUEsTUFBQSxHQUFhLElBQUEsS0FBSyxDQUFDLE9BQU4sQ0FBZSxDQUFFLEtBQUssQ0FBQyxDQUFOLEdBQVUsQ0FBQyxDQUFDLGFBQWQsQ0FBQSxHQUFnQyxDQUFoQyxHQUFvQyxDQUFuRCxFQUFzRCxDQUFBLENBQUksS0FBSyxDQUFDLENBQU4sR0FBVSxDQUFDLENBQUMsY0FBZCxDQUFGLEdBQW1DLENBQW5DLEdBQXVDLENBQTdGLEVBQWdHLEdBQWhHLENBSmIsQ0FBQTtBQUFBLElBS0EsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxlQUFaLENBQTZCLE1BQTdCLEVBQXFDLENBQUMsQ0FBQyxNQUF2QyxDQUxBLENBQUE7QUFBQSxJQU1BLFNBQUEsR0FBZ0IsSUFBQSxLQUFLLENBQUMsU0FBTixDQUFpQixDQUFDLENBQUMsTUFBTSxDQUFDLFFBQTFCLEVBQW9DLE1BQU0sQ0FBQyxHQUFQLENBQVksQ0FBQyxDQUFDLE1BQU0sQ0FBQyxRQUFyQixDQUErQixDQUFDLFNBQWhDLENBQUEsQ0FBcEMsQ0FOaEIsQ0FBQTtBQUFBLElBUUEsVUFBQSxHQUFhLFNBQVMsQ0FBQyxnQkFBVixDQUE0QixLQUFBLENBQU0sSUFBSSxDQUFDLEtBQUssQ0FBQyxVQUFqQixDQUE1QixFQUEwRCxJQUExRCxDQVJiLENBQUE7QUFTQSxJQUFBLElBQUssVUFBVSxDQUFDLE1BQVgsR0FBb0IsQ0FBekI7QUFDRSxNQUFBLElBQUksQ0FBQyxjQUFMLENBQUEsQ0FBQSxDQUFBO0FBQUEsTUFDQSxDQUFBLENBQUUsT0FBRixDQUFVLENBQUMsSUFBWCxDQUFnQixVQUFXLENBQUEsQ0FBQSxDQUFFLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUE1QyxDQURBLENBQUE7YUFFQSxVQUFXLENBQUEsQ0FBQSxDQUFFLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxTQUE1QixDQUFBLEVBSEY7S0FYdUM7RUFBQSxDQUF6QyxFQVBXO0FBQUEsQ0FERyxFQXdCZCxRQUFBLEdBQVcsU0FBQyxJQUFELEVBQU0sS0FBTixFQUFZLElBQVosR0FBQTtTQUNYLENBQUEsQ0FBRSxPQUFGLENBQVUsQ0FBQyxJQUFYLENBQWdCLFVBQUEsR0FBYSxJQUFiLEdBQW9CLEdBQXBCLEdBQTBCLEtBQTFDLEVBRFc7QUFBQSxDQXhCRyxDQUZsQixDQUFBOztBQUFBLENBNkJBLENBQUUsb0JBQUYsQ0FBdUIsQ0FBQyxNQUF4QixDQUNFO0FBQUEsRUFBQSxRQUFBLEVBQVUsS0FBVjtBQUFBLEVBQ0EsYUFBQSxFQUFlLElBRGY7QUFBQSxFQUVBLE9BQUEsRUFDRTtBQUFBLElBQUEsRUFBQSxFQUFJLFNBQUEsR0FBQTthQUNGLENBQUEsQ0FBRSxJQUFGLENBQU8sQ0FBQyxNQUFSLENBQWUsT0FBZixFQURFO0lBQUEsQ0FBSjtHQUhGO0NBREYsQ0E3QkEsQ0FBQTs7QUFBQSxDQW9DQSxDQUFFLG9CQUFGLENBQXVCLENBQUMsRUFBeEIsQ0FBMkIsT0FBM0IsRUFBb0MsU0FBQSxHQUFBO1NBQ2hDLENBQUEsQ0FBRSxvQkFBRixDQUF1QixDQUFDLE1BQXhCLENBQStCLE1BQS9CLEVBRGdDO0FBQUEsQ0FBcEMsQ0FwQ0EsQ0FBQSIsCiAgInNvdXJjZXNDb250ZW50IjogWwogICAgIiMgQ3JlYXRlIGEgVEhSRUUuV2ViR0xSZW5kZXJlcigpIHRvIGhvc3QgdGhlIHJvYm90LiBZb3UgY2FuIGNyZWF0ZSB5b3VyIG93biwgb3IgdXNlIHRoZSBwcm92aWRlZCBjb2RlIHRvIGdlbmVyYXRlIGRlZmF1bHQgc2V0dXAuXG5jID0gbmV3IFdlYkdMUm9ib3RzLkRlZmF1bHRDYW52YXMoJyNodWJvX2NvbnRhaW5lcicpXG4jIENyZWF0ZSBhIG5ldyByb2JvdCBpbnN0YW5jZS5cbndpbmRvdy5odWJvID0gbmV3IEh1Ym8gJ2h1Ym8yJ1xuICAsIGNhbGxiYWNrID0gKCkgLT5cbiAgICAjIE9uY2UgdGhlIFVSREYgaXMgY29tcGxldGVseSBsb2FkZWQsIHRoaXMgZnVuY3Rpb24gaXMgcnVuLlxuICAgICMgQWRkIHlvdXIgcm9ib3QgdG8gdGhlIGNhbnZhcy5cbiAgICBjLmFkZChodWJvKVxuICAgICQoJyNsb2FkJykuaGlkZSgpXG4gICAgIyBBZGQgY2xpY2tpbmcgc3VwcG9ydFxuICAgIGMucHJvamVjdG9yID0gbmV3IFRIUkVFLlByb2plY3RvcigpXG4gICAgJChjLnJlbmRlcmVyLmRvbUVsZW1lbnQpLm9uIFwibW91c2Vkb3duXCIsIChldmVudCkgLT5cbiAgICAgICMgQ29tcHV0ZSB0aGUgYWN0dWFsIGNsaWNrIGNvb3JkaW5hdGVzLiAoU2hlZXNoKVxuICAgICAgY2xpY2sgPSB7fVxuICAgICAgY2xpY2sueCA9IGV2ZW50LmNsaWVudFggLSAkKHRoaXMpLm9mZnNldCgpLmxlZnRcbiAgICAgIGNsaWNrLnkgPSBldmVudC5jbGllbnRZIC0gJCh0aGlzKS5vZmZzZXQoKS50b3BcbiAgICAgICMgTWFnaWMgY29kZSBmcm9tIHRoZSBjYW52YXNfaW50ZXJhY3RpdmVfY3ViZXMuaHRtbCBleGFtcGxlXG4gICAgICB2ZWN0b3IgPSBuZXcgVEhSRUUuVmVjdG9yMyggKCBjbGljay54IC8gYy5kaXNwbGF5X3dpZHRoICkgKiAyIC0gMSwgLSAoIGNsaWNrLnkgLyBjLmRpc3BsYXlfaGVpZ2h0ICkgKiAyICsgMSwgMC41IClcbiAgICAgIGMucHJvamVjdG9yLnVucHJvamVjdFZlY3RvciggdmVjdG9yLCBjLmNhbWVyYSApXG4gICAgICByYXljYXN0ZXIgPSBuZXcgVEhSRUUuUmF5Y2FzdGVyKCBjLmNhbWVyYS5wb3NpdGlvbiwgdmVjdG9yLnN1YiggYy5jYW1lcmEucG9zaXRpb24gKS5ub3JtYWxpemUoKSApXG4gICAgICAjIENoZWNrIHRoZSByYXkgdG8gc2VlIGlmIGl0IGludGVyc2VjdHMgb2JqZWN0cy4gVGhlIHNlY29uZCBwYXJhbWV0ZXIgc2V0cyByZWN1cnNpdmUgc2VhcmNoIHRvIHRydWUuXG4gICAgICBpbnRlcnNlY3RzID0gcmF5Y2FzdGVyLmludGVyc2VjdE9iamVjdHMoIEFycmF5KGh1Ym8ubGlua3MuQm9keV9Ub3JzbyksIHRydWUpXG4gICAgICBpZiAoIGludGVyc2VjdHMubGVuZ3RoID4gMCApXG4gICAgICAgIGh1Ym8udW5oaWdobGlnaHRBbGwoKVxuICAgICAgICAkKCcjcGFydCcpLmh0bWwoaW50ZXJzZWN0c1swXS5vYmplY3QucGFyZW50Lm5hbWUpXG4gICAgICAgIGludGVyc2VjdHNbMF0ub2JqZWN0LnBhcmVudC5oaWdobGlnaHQoKVxuXG4gICwgcHJvZ3Jlc3MgPSAoc3RlcCx0b3RhbCxub2RlKSAtPlxuICAgICQoJyNsb2FkJykuaHRtbChcIkxvYWRpbmcgXCIgKyBzdGVwICsgXCIvXCIgKyB0b3RhbClcblxuJCgnI21vdXNlX2luZm9fZGlhbG9nJykuZGlhbG9nXG4gIGF1dG9PcGVuOiBmYWxzZVxuICBjbG9zZU9uRXNjYXBlOiB0cnVlXG4gIGJ1dHRvbnM6IFxuICAgIE9LOiAoKSAtPiBcbiAgICAgICQodGhpcykuZGlhbG9nKCdjbG9zZScpXG5cbiQoJyNtb3VzZV9pbmZvX2J1dHRvbicpLm9uICdjbGljaycsICgpIC0+XG4gICAgJCgnI21vdXNlX2luZm9fZGlhbG9nJykuZGlhbG9nKCdvcGVuJykiCiAgXQp9