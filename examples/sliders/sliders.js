// Generated by CoffeeScript 1.7.1
var c, callback, footMatrix, hubo, makeSlider, progress, sign,
  __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

footMatrix = null;

$('#controls').tabs();

c = new WebGLRobots.DefaultCanvas("#hubo_container");

hubo = new Hubo('hubo2', callback = function() {
  c.add(hubo);
  $('#load').hide();
  $(".joint").each(function() {
    var id;
    id = $(this).attr("data-name");
    makeSlider(id);
    return $("[data-name=" + id + "] .joint_txt").html(hubo.motors[id].value.toFixed(2));
  });
  return $('#footanchor').on('change', function(event) {
    console.log(event);
    if (this.checked) {
      footMatrix = new THREE.Matrix4;
      return footMatrix.copy(hubo.links.Body_LAR.matrixWorld);
    } else {
      return footMatrix = null;
    }
  });
}, progress = function(step, total, node) {
  return $('#load').html("Loading " + step + "/" + total);
});

makeSlider = function(id) {
  var neck_joints, s;
  s = $("[data-name=" + id + "] .joint_slider");
  s.slider({
    min: parseFloat(hubo.motors[id].lower_limit),
    max: parseFloat(hubo.motors[id].upper_limit),
    step: 0.01,
    value: hubo.motors[id].value
  });
  s.on("slide", function(event, ui) {
    return $("[data-name=" + id + "] .joint_txt").html(ui.value.toFixed(2));
  });
  s.on("slide", function(event, ui) {
    var a, b;
    hubo.motors[id].value = ui.value;
    if (footMatrix != null) {
      console.log("Fix foot");
      a = new THREE.Matrix4;
      a.getInverse(hubo.links.Body_LAR.matrixWorld);
      b = new THREE.Matrix4;
      b.multiplyMatrices(a, footMatrix);
      return hubo.links.Body_Torso.applyMatrix(b);
    }
  });
  neck_joints = ['NK1', 'NK2', 'HNP', 'HNR'];
  if ((__indexOf.call(neck_joints, id) >= 0)) {
    return s.on("slide", function(event, ui) {
      var other_joint, _i, _len, _results;
      _results = [];
      for (_i = 0, _len = neck_joints.length; _i < _len; _i++) {
        other_joint = neck_joints[_i];
        if (id !== other_joint) {
          $("[data-name=" + other_joint + "] .joint_slider").slider('value', hubo.motors[other_joint].value);
          _results.push($("[data-name=" + other_joint + "] .joint_txt").html(hubo.motors[other_joint].value.toFixed(2)));
        } else {
          _results.push(void 0);
        }
      }
      return _results;
    });
  }
};

sign = function(x) {
  if (x) {
    if (x < 0) {
      return -1;
    } else {
      return 1;
    }
  } else {
    return 0;
  }
};

//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAiZmlsZSI6ICIvZXhhbXBsZXMvc2xpZGVycy9zbGlkZXJzLmpzIiwKICAic291cmNlUm9vdCI6ICIiLAogICJzb3VyY2VzIjogWwogICAgIi9leGFtcGxlcy9zbGlkZXJzL3NsaWRlcnMuanMuY29mZmVlIgogIF0sCiAgIm5hbWVzIjogW10sCiAgIm1hcHBpbmdzIjogIjtBQUFBLElBQUEseURBQUE7RUFBQSxxSkFBQTs7QUFBQSxVQUFBLEdBQWEsSUFBYixDQUFBOztBQUFBLENBRUEsQ0FBRSxXQUFGLENBQWMsQ0FBQyxJQUFmLENBQUEsQ0FGQSxDQUFBOztBQUFBLENBSUEsR0FBUSxJQUFBLFdBQVcsQ0FBQyxhQUFaLENBQTBCLGlCQUExQixDQUpSLENBQUE7O0FBQUEsSUFLQSxHQUFXLElBQUEsSUFBQSxDQUFLLE9BQUwsRUFDVCxRQUFBLEdBQVcsU0FBQSxHQUFBO0FBR1QsRUFBQSxDQUFDLENBQUMsR0FBRixDQUFNLElBQU4sQ0FBQSxDQUFBO0FBQUEsRUFDQSxDQUFBLENBQUUsT0FBRixDQUFVLENBQUMsSUFBWCxDQUFBLENBREEsQ0FBQTtBQUFBLEVBR0EsQ0FBQSxDQUFFLFFBQUYsQ0FBVyxDQUFDLElBQVosQ0FBaUIsU0FBQSxHQUFBO0FBQ2YsUUFBQSxFQUFBO0FBQUEsSUFBQSxFQUFBLEdBQUssQ0FBQSxDQUFFLElBQUYsQ0FBTyxDQUFDLElBQVIsQ0FBYSxXQUFiLENBQUwsQ0FBQTtBQUFBLElBQ0EsVUFBQSxDQUFXLEVBQVgsQ0FEQSxDQUFBO1dBR0EsQ0FBQSxDQUFFLGFBQUEsR0FBZ0IsRUFBaEIsR0FBcUIsY0FBdkIsQ0FBc0MsQ0FBQyxJQUF2QyxDQUE0QyxJQUFJLENBQUMsTUFBTyxDQUFBLEVBQUEsQ0FBRyxDQUFDLEtBQUssQ0FBQyxPQUF0QixDQUE4QixDQUE5QixDQUE1QyxFQUplO0VBQUEsQ0FBakIsQ0FIQSxDQUFBO1NBUUEsQ0FBQSxDQUFFLGFBQUYsQ0FBZ0IsQ0FBQyxFQUFqQixDQUFvQixRQUFwQixFQUE4QixTQUFDLEtBQUQs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QUFBLEtBQUksV0FBUjtBQUVFLFVBQUEsQ0FBQSxDQUFFLGFBQUEsR0FBZ0IsV0FBaEIsR0FBOEIsaUJBQWhDLENBQWtELENBQUMsTUFBbkQsQ0FBMEQsT0FBMUQsRUFBa0UsSUFBSSxDQUFDLE1BQU8sQ0FBQSxXQUFBLENBQVksQ0FBQyxLQUEzRixDQUFBLENBQUE7QUFBQSx3QkFFQSxDQUFBLENBQUUsYUFBQSxHQUFnQixXQUFoQixHQUE4QixjQUFoQyxDQUErQyxDQUFDLElBQWhELENBQXFELElBQUksQ0FBQyxNQUFPLENBQUEsV0FBQSxDQUFZLENBQUMsS0FBSyxDQUFDLE9BQS9CLENBQXVDLENBQXZDLENBQXJELEVBRkEsQ0FGRjtTQUFBLE1BQUE7Z0NBQUE7U0FGRjtBQUFBO3NCQURZO0lBQUEsQ0FBZCxFQURGO0dBOUJXO0FBQUEsQ0EvQmIsQ0FBQTs7QUFBQSxJQXVFQSxHQUFPLFNBQUMsQ0FBRCxHQUFBO0FBQ0osRUFBQSxJQUFHLENBQUg7QUFBVyxJQUFBLElBQUcsQ0FBQSxHQUFJLENBQVA7YUFBYyxDQUFBLEVBQWQ7S0FBQSxNQUFBO2FBQXNCLEVBQXRCO0tBQVg7R0FBQSxNQUFBO1dBQXlDLEVBQXpDO0dBREk7QUFBQSxDQXZFUCxDQUFBIiwKICAic291cmNlc0NvbnRlbnQiOiBbCiAgICAiZm9vdE1hdHJpeCA9IG51bGxcblxuJCgnI2NvbnRyb2xzJykudGFicygpXG5cbmMgPSBuZXcgV2ViR0xSb2JvdHMuRGVmYXVsdENhbnZhcyhcIiNodWJvX2NvbnRhaW5lclwiKVxuaHVibyA9IG5ldyBIdWJvICdodWJvMicsXG4gIGNhbGxiYWNrID0gLT5cbiAgICAjIE9uY2UgdGhlIFVSREYgaXMgY29tcGxldGVseSBsb2FkZWQsIHRoaXMgZnVuY3Rpb24gaXMgcnVuLlxuICAgICMgQWRkIHlvdXIgcm9ib3QgdG8gdGhlIGNhbnZhcy5cbiAgICBjLmFkZCBodWJvXG4gICAgJCgnI2xvYWQnKS5oaWRlKClcbiAgICAjIE1ha2Ugam9pbnQgc2xpZGVyc1xuICAgICQoXCIuam9pbnRcIikuZWFjaCAtPlxuICAgICAgaWQgPSAkKHRoaXMpLmF0dHIoXCJkYXRhLW5hbWVcIilcbiAgICAgIG1ha2VTbGlkZXIoaWQpXG4gICAgICAjIFNldCB3aXRoIGluaXRpYWwgdGV4dFxuICAgICAgJChcIltkYXRhLW5hbWU9XCIgKyBpZCArIFwiXSAuam9pbnRfdHh0XCIpLmh0bWwgaHViby5tb3RvcnNbaWRdLnZhbHVlLnRvRml4ZWQoMilcbiAgICAkKCcjZm9vdGFuY2hvcicpLm9uICdjaGFuZ2UnLCAoZXZlbnQpIC0+XG4gICAgICBjb25zb2xlLmxvZyhldmVudClcbiAgICAgIGlmIHRoaXMuY2hlY2tlZFxuICAgICAgICAjIFdBUk5JTkchIEdsb2JhbCB2YXJpYWJsZS5cbiAgICAgICAgZm9vdE1hdHJpeCA9IG5ldyBUSFJFRS5NYXRyaXg0XG4gICAgICAgIGZvb3RNYXRyaXguY29weShodWJvLmxpbmtzLkJvZHlfTEFSLm1hdHJpeFdvcmxkKVxuICAgICAgZWxzZVxuICAgICAgICBmb290TWF0cml4ID0gbnVsbFxuICBwcm9ncmVzcyA9IChzdGVwLHRvdGFsLG5vZGUpIC0+XG4gICAgJCgnI2xvYWQnKS5odG1sKFwiTG9hZGluZyBcIiArIHN0ZXAgKyBcIi9cIiArIHRvdGFsKVxuXG4jXG4jICogKiAqIEpRVUVSWSBTTElERVJTICogKiAqXG4jIFxubWFrZVNsaWRlciA9IChpZCkgLT5cbiAgcyA9ICQoXCJbZGF0YS1uYW1lPVwiICsgaWQgKyBcIl0gLmpvaW50X3NsaWRlclwiKVxuICBzLnNsaWRlclxuICAgIG1pbjogcGFyc2VGbG9hdChodWJvLm1vdG9yc1tpZF0ubG93ZXJfbGltaXQpXG4gICAgbWF4OiBwYXJzZUZsb2F0KGh1Ym8ubW90b3JzW2lkXS51cHBlcl9saW1pdClcbiAgICBzdGVwOiAwLjAxXG4gICAgdmFsdWU6IGh1Ym8ubW90b3JzW2lkXS52YWx1ZVxuXG4gICMgVXBkYXRlIHRleHQgZGlzcGxheVxuICBzLm9uIFwic2xpZGVcIiwgKGV2ZW50LCB1aSkgLT5cbiAgICAkKFwiW2RhdGEtbmFtZT1cIiArIGlkICsgXCJdIC5qb2ludF90eHRcIikuaHRtbCB1aS52YWx1ZS50b0ZpeGVkKDIpXG4gIFxuICAjIFVwZGF0ZSBIdWJvIG1vZGVsXG4gIHMub24gXCJzbGlkZVwiLCAoZXZlbnQsIHVpKSAtPlxuICAgIGh1Ym8ubW90b3JzW2lkXS52YWx1ZSA9IHVpLnZhbHVlXG4gICAgaWYgZm9vdE1hdHJpeD9cbiAgICAgIGNvbnNvbGUubG9nKFwiRml4IGZvb3RcIilcbiAgICAgICMgUm90YXRlIHRoZSB3aG9sZSBzaGViYW5nIHNvIHRoYXQgdGhlIGZvb3QgaXMgdGhlIFwiZ3JvdW5kZWRcIiBvYmplY3QuXG4gICAgICAjIGZvciBwcm9wIG9mIGh1Ym8ubGlua3NcbiAgICAgICMgICAgIGlmIGh1Ym8ubGlua3NbcHJvcF0uYXBwbHlNYXRyaXg/XG4gICAgICAjICAgICAgICAgaHViby5saW5rc1twcm9wXS5hcHBseU1hdHJpeChodWJvLmxpbmtzLkJvZHlfUkFSLm1hdHJpeFdvcmxkKVxuICAgICAgYSA9IG5ldyBUSFJFRS5NYXRyaXg0XG4gICAgICBhLmdldEludmVyc2UoaHViby5saW5rcy5Cb2R5X0xBUi5tYXRyaXhXb3JsZClcbiAgICAgIGIgPSBuZXcgVEhSRUUuTWF0cml4NFxuICAgICAgYi5tdWx0aXBseU1hdHJpY2VzKGEsZm9vdE1hdHJpeClcbiAgICAgIGh1Ym8ubGlua3MuQm9keV9Ub3Jzby5hcHBseU1hdHJpeChiKVxuXG4gICMgU2luY2UgdGhlIG5lY2sgc2xpZGVycyBhcmUgY291cGxlZCwgd2hlbiBvbmUgc2xpZGVyIGlzIHVwZGF0ZVxuICAjIHdlIHNob3VsZCB1cGRhdGUgdGhlIG90aGVyIHNsaWRlcnMgd2l0aCB0aGUgbmV3IG1vZGVsIHBvc2l0aW9ucy5cbiAgbmVja19qb2ludHMgPSBbJ05LMScsICdOSzInLCAnSE5QJywgJ0hOUiddXG4gIGlmIChpZCBpbiBuZWNrX2pvaW50cylcbiAgICBzLm9uIFwic2xpZGVcIiwgKGV2ZW50LCB1aSkgLT5cbiAgICAgIGZvciBvdGhlcl9qb2ludCBpbiBuZWNrX2pvaW50c1xuICAgICAgICAjIChEb24ndCB1cGRhdGUgaXRzZWxmKVxuICAgICAgICBpZiAoaWQhPW90aGVyX2pvaW50KVxuICAgICAgICAgICMgVXBkYXRlIHNsaWRlciBwb3NpdGlvblxuICAgICAgICAgICQoXCJbZGF0YS1uYW1lPVwiICsgb3RoZXJfam9pbnQgKyBcIl0gLmpvaW50X3NsaWRlclwiKS5zbGlkZXIoJ3ZhbHVlJyxodWJvLm1vdG9yc1tvdGhlcl9qb2ludF0udmFsdWUpO1xuICAgICAgICAgICMgVXBkYXRlIHRleHQgZGlzcGxheVxuICAgICAgICAgICQoXCJbZGF0YS1uYW1lPVwiICsgb3RoZXJfam9pbnQgKyBcIl0gLmpvaW50X3R4dFwiKS5odG1sIGh1Ym8ubW90b3JzW290aGVyX2pvaW50XS52YWx1ZS50b0ZpeGVkKDIpXG5cbnNpZ24gPSAoeCkgLT5cbiAgKGlmIHggdGhlbiAoaWYgeCA8IDAgdGhlbiAtMSBlbHNlIDEpIGVsc2UgMCkiCiAgXQp9